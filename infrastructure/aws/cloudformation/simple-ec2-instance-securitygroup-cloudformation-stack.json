{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Sample CloudFormation Template for CSYE 6225 - Fall 2017",
    "Resources": {
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "packages": {
                            "apt": {
                                "java-1.8.0-openjdk": [],
                                "tomcat8": []
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": "ami-cd0f5cb6",
                "InstanceType": "t2.micro",
                "SecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "csye6225webapp",
                            "GroupId"
                        ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "export DEBIAN_FRONTEND=noninteractive\n",
                                "sudo apt-get update && apt-get upgrade -y\n",
                                "sudo apt-get -y install default-jre\n",
                                "sudo apt-get -y install default-jdk\n",
                                "sudo apt-get -y install tomcat8\n",
                                "sudo apt-get -y install ruby\n",
                                "sudo apt-get install wget \n",
                                "cd /home/ubuntu\n",
                                "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
                                "chmod +x ./install\n",
                                "sudo ./install auto\n",
                                "sudo service codedeploy-agent stop\n",
                                "sudo service codedeploy-agent start\n",
                                "sudo service codedeploy-agent status\n",
                                "\n"
                            ]
                        ]
                    }
                },
                "KeyName": "id_rsa",
                "SubnetId": {
                    "Ref": "ParamSubnetID"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeType": "gp2",
                            "VolumeSize": "16"
                        }
                    }
                ],
                "DisableApiTermination": false
            }
        },
        "csye6225webapp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "security group for ec2",
                "VpcId": {
                    "Ref": "ParamVPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "csye6225rds": {
            "Type": "AWS::RDS::DBSecurityGroup",
            "Properties": {
                "DBSecurityGroupIngress": {
                    "EC2SecurityGroupId": {
                        "Fn::GetAtt": [
                            "csye6225webapp",
                            "GroupId"
                        ]
                    }
                },
                "EC2VpcId": {
                    "Ref": "ParamVPCID"
                },
                "GroupDescription": "security group for rds"
            }
        },
        "DBSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "DBSubnetGroup",
                "SubnetIds": [
                    {
                        "Ref": "ParamSubnetID"
                    },
                    {
                        "Ref": "ParamSubnetID2"
                    }
                ]
            }
        },
        "RecordSetGroup": {
            "Type": "AWS::Route53::RecordSetGroup",
            "Properties": {
                "Comment": "Update record to reflect new IP address",
                "HostedZoneId": {
                    "Ref": "ParamHostedZoneID"
                },
                "RecordSets": [
                    {
                        "Name": {
                            "Ref": "ParamRecordSetsName"
                        },
                        "Type": "A",
                        "TTL": "60",
                        "ResourceRecords": [
                            {
                                "Fn::GetAtt": [
                                    "EC2Instance",
                                    "PublicIp"
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "id",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                    }
                ],
                "TableName": "csye6225",
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                }
            }
        },
        "RecordServiceS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Delete",
            "Properties": {
                "BucketName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "ParamRecordSetsName"
                            },
                            "csye6225.com"
                        ]
                    ]
                }
            }
        },
        "RDSInstance": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBName": "csye6225",
                "AllocatedStorage": "10",
                "DBInstanceClass": "db.t2.medium",
                "MultiAZ": false,
                "Engine": "MySQL",
                "EngineVersion": "5.6.35",
                "MasterUsername": "csye6225master",
                "MasterUserPassword": "csye6225password",
                "StorageType": "gp2",
                "DBSecurityGroups": [
                    {
                        "Ref": "csye6225rds"
                    }
                ],
                "DBInstanceIdentifier": "csye6225-fall2017",
                "PubliclyAccessible": false,
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                }
            },
            "DeletionPolicy": "Delete"
<<<<<<< HEAD
        },
        "CodeDeployEC2ServiceRole": {
               "Type": "AWS::IAM::Role",
               "Properties": {
                  "AssumeRolePolicyDocument": {
                     "Version" : "2012-10-17",
                     "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                           "Service": [ "ec2.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                     } ]
                  },
                  "Path": "/",
                  "Policies": [ {
                     "PolicyName": "CodeDeploy-EC2-S3-CloudFormation",
                     "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                            {
                              "Action": [
                                "s3:Get*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ]
                        }
                     }
                    ]
                  }
            },
          "CodeDeployServiceRole": {
                   "Type": "AWS::IAM::Role",
                   "Properties": {
                      "AssumeRolePolicyDocument": {
                         "Version" : "2012-10-17",
                         "Statement": [ {
                            "Effect": "Allow",
                            "Principal": {
                               "Service": [ "ec2.amazonaws.com" ]
                            },
                            "Action": [ "sts:AssumeRole" ]
                         } ]
                      },
                      "Path": "/",
                      "Policies": [ {
                         "PolicyName": "CodeDeploy-EC2-S3-CloudFormation",
                         "PolicyDocument": {
                              "Version": "2012-10-17",
                              "Statement": [
                                  {
                                      "Effect": "Allow",
                                      "Action": [
                                          "autoscaling:CompleteLifecycleAction",
                                          "autoscaling:DeleteLifecycleHook",
                                          "autoscaling:DescribeAutoScalingGroups",
                                          "autoscaling:DescribeLifecycleHooks",
                                          "autoscaling:PutLifecycleHook",
                                          "autoscaling:RecordLifecycleActionHeartbeat",
                                          "autoscaling:CreateAutoScalingGroup",
                                          "autoscaling:UpdateAutoScalingGroup",
                                          "autoscaling:EnableMetricsCollection",
                                          "autoscaling:DescribeAutoScalingGroups",
                                          "autoscaling:DescribePolicies",
                                          "autoscaling:DescribeScheduledActions",
                                          "autoscaling:DescribeNotificationConfigurations",
                                          "autoscaling:DescribeLifecycleHooks",
                                          "autoscaling:SuspendProcesses",
                                          "autoscaling:ResumeProcesses",
                                          "autoscaling:AttachLoadBalancers",
                                          "autoscaling:PutScalingPolicy",
                                          "autoscaling:PutScheduledUpdateGroupAction",
                                          "autoscaling:PutNotificationConfiguration",
                                          "autoscaling:PutLifecycleHook",
                                          "autoscaling:DescribeScalingActivities",
                                          "autoscaling:DeleteAutoScalingGroup",
                                          "ec2:DescribeInstances",
                                          "ec2:DescribeInstanceStatus",
                                          "ec2:TerminateInstances",
                                          "tag:GetTags",
                                          "tag:GetResources",
                                          "sns:Publish",
                                          "cloudwatch:DescribeAlarms",
                                          "cloudwatch:PutMetricAlarm",
                                          "elasticloadbalancing:DescribeLoadBalancers",
                                          "elasticloadbalancing:DescribeInstanceHealth",
                                          "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                          "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                          "elasticloadbalancing:DescribeTargetGroups",
                                          "elasticloadbalancing:DescribeTargetHealth",
                                          "elasticloadbalancing:RegisterTargets",
                                          "elasticloadbalancing:DeregisterTargets"
                                      ],
                                      "Resource": "*"
                                  }
                              ]
                          }
                         }
                        ]
                      }
                },
      "CodeDeployEC2ServiceRoleInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "CodeDeployEC2ServiceRole"
            } ]
         }
      },

      "travisuser" : {
         "Type" : "AWS::IAM::User",
         "Properties" : {
            "Path" : "/",
            "LoginProfile" : {
               "Password" : "travisuser"
            },
            "Policies" : [ {
               "PolicyName" : "Travis-Code-Deploy-CloudFormation",
               "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:RegisterApplicationRevision",
                                "codedeploy:GetApplicationRevision"
                            ],
                            "Resource": [
                                "arn:aws:codedeploy:us-east-1:773741813041:application:csye6225"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetDeployment"
                            ],
                            "Resource": [
                                "*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codedeploy:GetDeploymentConfig"
                            ],
                            "Resource": [
                                "arn:aws:codedeploy:us-east-1:773741813041:deploymentconfig:CodeDeployDefault.OneAtATime",
                                "arn:aws:codedeploy:us-east-1:773741813041:deploymentconfig:CodeDeployDefault.HalfAtATime",
                                "arn:aws:codedeploy:us-east-1:773741813041:deploymentconfig:CodeDeployDefault.AllAtOnce"
                            ]
                        }
                    ]
                }
            }, {
               "PolicyName" : "Travis-Upload-To-S3-CloudFormation",
               "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                }
            } ]
         }
      } 
=======
        }
>>>>>>> ac634f47fd715fa54096dfab220a26194deb23a7
    },
    "Parameters": {
        "ParamVPCID": {
            "Type": "String"
        },
        "ParamSubnetID": {
            "Type": "String"
        },
        "ParamSubnetID2": {
            "Type": "String"
        },
        "ParamHostedZoneID": {
            "Type": "String"
        },
        "ParamRecordSetsName": {
            "Type": "String"
        }
    }
}