char[] sig_arr = signature.toCharArray(); char[] twe_arr = tweets.toCharArray(); int letter_len = 0; for(char c : sig_arr){ if(Character.isLetter(c)) letter_len++; } char[] keys = new char[letter_len]; int sig_cur = sig_arr.length - 1; int twe_cur = twe_arr.length - 1; letter_len--; while(sig_cur >= 0){ if(Character.isLetter(sig_arr[sig_cur])){ char sig = sig_arr[sig_cur]; char twe = twe_arr[twe_cur]; int tmp = sig - twe; //System.out.println(-tmp); int offset = (twe - sig) < 0 ? (twe + 26 - sig) : (twe - sig); keys[letter_len] = (char)('0' + offset); letter_len--; } sig_cur--; twe_cur--; } String short_key = shortenKey(new String(keys)); for(int i = 1; i < short_key.length(); i++){ StringBuilder key_builder = new StringBuilder(); key_builder.append(short_key.substring(i)); key_builder.append(short_key.substring(0, i)); String tmp_key = key_builder.toString(); String new_tweets = decrypt(tweets, tmp_key); if(new_tweets.substring(new_tweets.length() - signature.length()).equals(signature)){ return tmp_key; } } return "";
